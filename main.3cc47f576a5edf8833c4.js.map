{"version":3,"sources":["webpack:///./api/api.js","webpack:///./index.js"],"names":["api","key","this","input","$","gallery","loadMoreBtn","button","h2","defaultPage","defaultQuery","imgList","data","length","fadeIn","fadeOut","css","map","item","append","webformatURL","largeImageURL","likes","views","comments","downloads","off","on","evt","basicLightbox","target","getAttribute","show","searchImages","page","url","q","fetch","res","json","console","log","hits","searchString","value","preventDefault","final","replace","html","setTimeout","window","scrollTo","top","offsetTop","behavior"],"mappings":"+MAKeA,EALH,CACVC,IAAK,qCACL,UAAY,sCAAuCC,KAAKD,IAA5C,yD,8ICGd,IACEE,EAAQC,IAAE,SACVC,EAAUD,IAAE,YACZE,EAAcF,IAAE,cAChBG,EAASH,IAAE,UACXI,EAAKJ,IAAE,MAGPK,EAAc,EACdC,EAAe,QAUXC,EAAU,SAAAC,GACTA,EAAKC,SACRL,EAAGM,SACHR,EAAYS,QAAQ,IAElBH,EAAKC,SACPL,EAAGO,QAAQ,GACXT,EAAYQ,SAASE,IAAI,UAAW,UAEtCJ,EAAKK,KAAI,SAAAC,GACPb,EAAQc,OAAR,yDAGkBD,EAAKE,aAHvB,+CAGkFF,EAAKG,cAHvF,+GAKsEH,EAAKI,MAL3E,mFAMwEJ,EAAKK,MAN7E,gFAOqEL,EAAKM,SAP1E,uFAQ4EN,EAAKO,UARjF,gDAjBFrB,IAAE,eACCsB,MACAC,GAAG,SAAS,SAAAC,GAAG,OAChBC,SAAA,gCAC0CD,EAAIE,OAAOC,aAAa,cADlE,YAEGC,WA6BDC,EAAY,e,EAAA,G,EAAA,yBAAG,WAAOC,EAAoBC,EAAeC,GAA1C,wGAAOF,MAAOzB,QAAd,IAA2B0B,MAAMnC,EAAImC,UAArC,IAA0CC,MAAI1B,GAA9C,kBAED2B,MAASF,EAAJ,MAAaC,EAAb,SAAuBF,GAF3B,cAEbI,EAFa,gBAGAA,EAAIC,OAHJ,OAGb3B,EAHa,OAIjB4B,QAAQC,IAAI7B,EAAK8B,MACjB/B,EAAQC,EAAK8B,MALI,kDAOjBF,QAAQC,IAAI,aAAZ,MAPiB,yD,+KAAH,0DAYdE,EAAexC,EAAMwB,GAAG,SAAS,SAAAC,GAAG,OAAIe,EAAef,EAAIE,OAAOc,SAGtErC,EAAOoB,GAAG,SAAS,SAAAC,GACjBA,EAAIiB,iBACJ,IAAIC,EAAgC,IAAxBH,EAAa9B,OAAe8B,EAAeA,EAAaI,QAAQ,KAAM,KAClF1C,EAAQ2C,KAAK,IACbf,EAAaxB,EAAaT,EAAImC,IAAKW,GACnCpC,EAAeiC,KAIjBrC,EAAYqB,GAAG,SAAS,SAAAC,GACtBA,EAAIiB,iBACJZ,EAAaxB,GAAe,EAAGT,EAAImC,IAAKzB,GACxCuC,YAAW,WACTC,OAAOC,SAAS,CACdC,IAAKxB,EAAIE,OAAOuB,UAChBC,SAAU,aAEX,QAGLrB,M","file":"main.3cc47f576a5edf8833c4.js","sourcesContent":["const api = {\r\n  key: '21111393-6001b1f3c039d334af6d283f7',\r\n  get url() { return `https://pixabay.com/api/?key=${this.key}&image_type=photo&per_page=18&orientation=horizontal` },\r\n};\r\n\r\nexport default api\r\n","import './styles.css';\nimport * as basicLightbox from 'basiclightbox'\nimport api from './api/api'\nimport $ from 'jquery';\n\nconst\n  input = $('input'),\n  gallery = $('#gallery'),\n  loadMoreBtn = $('#load_more'),\n  button = $('button'),\n  h2 = $('h2')\n\nlet\n  defaultPage = 1,\n  defaultQuery = 'girls'\n\nconst lightBox = () =>\n  $('.photo-card')\n    .off()\n    .on('click', evt =>\n    basicLightbox\n      .create(`<div class=\"modal\"><img src=\"${evt.target.getAttribute('data-large')}\"></div>`)\n      .show());\n\nconst imgList = data => {\n  if (!data.length) {\n    h2.fadeIn()\n    loadMoreBtn.fadeOut(0)\n  }\n  if (data.length) {\n    h2.fadeOut(0);\n    loadMoreBtn.fadeIn().css('display', 'block')\n  }\n  data.map(item => {\n    gallery.append(\n      `\n      <li class=\"photo-card\" >\n          <img src=\"${item.webformatURL}\" alt=\"\" class=\"photo-card-img\" data-large=\"${item.largeImageURL}\"/>\n          <div class=\"stats\">\n            <p class=\"stats-item\"><i class=\"material-icons\">thumb_up</i>${item.likes}</p>\n            <p class=\"stats-item\"><i class=\"material-icons\">visibility</i>${item.views}</p>\n            <p class=\"stats-item\"><i class=\"material-icons\">comment</i>${item.comments}</p>\n            <p class=\"stats-item\"><i class=\"material-icons\">cloud_download</i>${item.downloads}</p>\n          </div>\n      </li>\n    `);\n  });\n  lightBox()\n};\n\n// Images request\nconst searchImages = async (page = defaultPage, url = api.url, q = defaultQuery) => {\n  try {\n    let res = await fetch(`${url}&q=${q}&page=${page}`);\n    let data = await res.json();\n    console.log(data.hits);\n    imgList(data.hits)\n  } catch (err) {\n    console.log('Error ==> ', err);\n  }\n}\n\n// Track input\nlet searchString = input.on('input', evt => searchString = evt.target.value);\n\n// Search click which is hidden\nbutton.on('click', evt => {\n  evt.preventDefault();\n  let final = searchString.length === 1 ? searchString : searchString.replace(/ /g, '+')\n  gallery.html('');\n  searchImages(defaultPage, api.url, final)\n  defaultQuery = searchString\n});\n\n// Load more click\nloadMoreBtn.on('click', evt => {\n  evt.preventDefault();\n  searchImages(defaultPage += 1, api.url, defaultQuery);\n  setTimeout(() => {\n    window.scrollTo({\n      top: evt.target.offsetTop,\n      behavior: 'smooth'\n    });\n  }, 1000)\n})\n\nsearchImages()\n"],"sourceRoot":""}